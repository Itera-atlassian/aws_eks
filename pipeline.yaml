# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml 
name: $(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)_$(Build.SourceVersion)

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- script: |
    # Configurar Python 3.11.3
    sudo add-apt-repository ppa:deadsnakes/ppa -y
    sudo apt-get update
    sudo apt-get install python3.11 -y
    python3.11 --version
    pip install -r requeriments.txt
  displayName: 'PYTHON: Install python 3.11'

- script: |
    # Ejecutar pruebas unitarias aqu√≠
    # Por ejemplo, puedes usar pytest para ejecutar tus pruebas
    pip install pytest
    pytest test_main.py -vv
  displayName: 'TEST: Run Unit Tests'

- task: Bash@3
  displayName: "TAG: define"
  inputs:
    targetType: 'inline'
    script: |
      TAG2=release-$(date  +%Y%m%d%H%M%S)-$(Build.SourceVersion)
      echo "##vso[task.setvariable variable=tag]$TAG2"

- script: |
    docker build -t imagename:latest .
    docker images
  displayName: 'IMAGE: create image'

- task: ECRPushImage@1
  displayName: 'ECR: push image'
  inputs:
    awsCredentials: 'AWS_ECR_TEST'
    regionName: 'us-east-1'
    imageSource: 'imagename'
    sourceImageName: 'imagename'
    sourceImageTag: 'latest'
    repositoryName: 'app-sumatoria'
    pushTag: '$(tag)'

- task: Bash@3
  displayName: "EKS: manifest"
  inputs:
    targetType: 'inline'
    script: |
      sed -i "s/latest/$(tag)/g" manifest/deployment.yaml
      cat manifest/deployment.yaml


- task: AmazonWebServices.aws-vsts-tools.AWSShellScript.AWSShellScript@1
  displayName: 'EKS: apply manifest'
  inputs:
    awsCredentials: 'AWS_ECR_TEST'
    regionName: 'us-east-1'
    scriptType: inline
    inlineScript: |
      echo 'Using identity'
      aws sts get-caller-identity

      aws eks update-kubeconfig --region us-east-2 --name cluster-eks

      kubectl apply -f manifest/deployment.yaml
      kubectl get all -A