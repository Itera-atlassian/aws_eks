# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:


#- task: ECRPullImage@1
#  inputs:
#    awsCredentials: 'AWS_ECR_TEST'
#    regionName: 'us-east-1'
#    repository: 'testbgr/api1'
#    imageSource: 'imagetag'

- script: |
    docker build -t imagename:latest .
    docker images
  displayName: 'COPY: Dockerfile'

- task: ECRPushImage@1
  inputs:
    awsCredentials: 'AWS_ECR_TEST'
    regionName: 'us-east-1'
    imageSource: 'imagename'
    sourceImageName: 'imagename'
    sourceImageTag: 'latest'
    repositoryName: 'testbgr/api1'
    pushTag: 'latest'


- task: AmazonWebServices.aws-vsts-tools.AWSCLI.AWSCLI@1
  inputs:
    awsCredentials: 'AWS_ECR_TEST'
    regionName: 'us-east-1'
    awsCommand: s3
    awsSubCommand: ls
    failOnStandardError: false
  displayName: 'Update ECS Service'


#- task: AmazonWebServices.aws-vsts-tools.AWSCLI.AWSCLI@1
#  displayName: 'Update ECS Service'
#  inputs:
#    awsCredentials: 'AWS_ECR_TEST'
#    regionName: 'us-east-1' # Cambia esto a la regi√≥n de tu ECR
#    awsCliVersion: 'latest'
#    scriptType: 'bash'
#    scriptLocation: 'inline'
#    inlineScript: |
#      aws ecs update-service --cluster cluster_fargate --service svc_fastapi --force-new-deployment