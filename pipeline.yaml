# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml 

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- script: |
    # Configurar Python 3.11.3
    sudo add-apt-repository ppa:deadsnakes/ppa -y
    sudo apt-get update
    sudo apt-get install python3.11 -y
    python3.11 --version
    pip install -r requeriments.txt
  displayName: 'Instalación python version 3.11'

- script: |
    # Ejecutar pruebas unitarias aquí
    # Por ejemplo, puedes usar pytest para ejecutar tus pruebas
    pip install pytest
    pytest test_main.py
  displayName: 'Run Unit Tests'

- script: |
    docker build -t imagename:latest .
    docker images
  displayName: 'COPY: Dockerfile'

- task: ECRPushImage@1
  inputs:
    awsCredentials: 'AWS_ECR_TEST'
    regionName: 'us-east-1'
    imageSource: 'imagename'
    sourceImageName: 'imagename'
    sourceImageTag: 'latest'
    repositoryName: 'app-sumatoria'
    pushTag: 'latest'

- task: AmazonWebServices.aws-vsts-tools.AWSShellScript.AWSShellScript@1
  displayName: 'AWS Shell Script'
  inputs:
    awsCredentials: 'AWS_ECR_TEST'
    regionName: 'us-east-1'
    scriptType: inline
    inlineScript: |
      echo 'Using identity'
      aws sts get-caller-identity

      aws eks update-kubeconfig --region us-east-1 --name basic-cluster-public

      kubectl apply -f manifest/deployment.yaml
      kubectl get all -A